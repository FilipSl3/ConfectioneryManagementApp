@model IEnumerable<ConfectioneryManagementApp.Models.ViewModels.OrderViewModel>

<h2>Lista zamówień</h2>
@{
    ViewData["Title"] = "Lista zamówień";
}

<div class="all-filter-bar">
    @await Html.PartialAsync("_DateFilterPartial")

    <form method="get" class="mb-3">
        <div class="filter-bar">
            <div>
                <label for="search">Szukaj klienta:</label>
                <input type="text" id="search" name="search" value="@Context.Request.Query["search"]" class="form-control"/>
            </div>
            <div>
                <button type="submit" class="btn btn-primary">Szukaj</button>
            </div>
        </div>
    </form>
    <div class="filter-bar btn-zamowienie">
        <a href="@Url.Action("Create", "Orders")" class="btn btn-primary">+ Nowe zamówienie</a>
    </div>
</div>

<form id="csrf-form">@Html.AntiForgeryToken()</form>

<table class="table table-striped table-bordered mt-3">
    <thead>
    <tr>
        <th>Imię i nazwisko</th>
        <th>Telefon</th>
        <th>Data odbioru</th>
        <th>Ciasta</th>
        <th>Torty</th>
        @* <th>Zrealizowano</th> *@
        <th>Edycja</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var order in Model)
    {
        <tr id="orderRow_@order.Id">
            <td>@order.ClientName</td>
            <td style="width: 115px">@order.PhoneNumber</td>
            <td style="width: 130px">@order.DeliveryDate.ToShortDateString()</td>
            <td>
                @if (order.Pastries?.Any() == true)
                {
                    <ul>
                        @foreach (var cake in order.Pastries) { <li>@cake</li> }
                    </ul>
                }
                else { <span>-</span> }
            </td>
            <td>
                @if (order.Cakes?.Any() == true)
                {
                    <ul>
                        @foreach (var cake in order.Cakes) { <li>@cake</li> }
                    </ul>
                }
                else { <span>-</span> }
            </td>
            @* <td style="width: 130px"> *@
            @*     @if (order.IsCompleted) *@
            @*     { *@
            @*         <span class="text-success">Tak</span> *@
            @*     } *@
            @*     else *@
            @*     { *@
            @*         <span class="text-danger">Nie</span> *@
            @*     } *@
            @* </td> *@
            <td style="width: 130px; margin: auto; text-align: center">
                <a href="@Url.Action("Edit", "Orders", new { id = order.Id })" class="btn btn-sm btn-warning">Edytuj</a>
                <form asp-action="Delete" asp-route-id="@order.Id" method="post" style="display:inline;">
                    <button class="btn btn-sm btn-danger" data-id="@order.Id">Usuń</button>
                </form>
            </td>
        </tr>
    }
    </tbody>
</table>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).on('click', '.btn-delete', function (e) {
            e.preventDefault();
            e.stopPropagation();

            const id = $(this).data('id');
            const token = $('input[name="__RequestVerificationToken"]').val();

            if (confirm("Czy na pewno chcesz usunąć to zamówienie?")) {
                $.ajax({
                    url: `/Orders/Delete/${id}`,
                    type: 'POST',
                    headers: { 'RequestVerificationToken': token },
                    success: function () {
                        $(`#orderRow_${id}`).remove();
                    },
                    error: function (xhr) {
                        alert(xhr.responseText || "Wystąpił błąd podczas usuwania.");
                    }
                });
            }
        });
    </script>
}
